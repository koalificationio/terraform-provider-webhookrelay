// Code generated by go-swagger; DO NOT EDIT.

package outputs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new outputs API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for outputs API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	DeleteV1BucketsBucketIDOutputsOutputID(params *DeleteV1BucketsBucketIDOutputsOutputIDParams) (*DeleteV1BucketsBucketIDOutputsOutputIDOK, error)

	PostV1BucketsBucketIDOutputs(params *PostV1BucketsBucketIDOutputsParams) (*PostV1BucketsBucketIDOutputsCreated, error)

	PutV1BucketsBucketIDOutputsOutputID(params *PutV1BucketsBucketIDOutputsOutputIDParams) (*PutV1BucketsBucketIDOutputsOutputIDOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  DeleteV1BucketsBucketIDOutputsOutputID deletes output
*/
func (a *Client) DeleteV1BucketsBucketIDOutputsOutputID(params *DeleteV1BucketsBucketIDOutputsOutputIDParams) (*DeleteV1BucketsBucketIDOutputsOutputIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteV1BucketsBucketIDOutputsOutputIDParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "DeleteV1BucketsBucketIDOutputsOutputID",
		Method:             "DELETE",
		PathPattern:        "/v1/buckets/{bucketID}/outputs/{outputID}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DeleteV1BucketsBucketIDOutputsOutputIDReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteV1BucketsBucketIDOutputsOutputIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for DeleteV1BucketsBucketIDOutputsOutputID: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PostV1BucketsBucketIDOutputs creates a new output

  Create one or more outputs for the bucket to start forwarding webhooks to those destinations.
*/
func (a *Client) PostV1BucketsBucketIDOutputs(params *PostV1BucketsBucketIDOutputsParams) (*PostV1BucketsBucketIDOutputsCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostV1BucketsBucketIDOutputsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostV1BucketsBucketIDOutputs",
		Method:             "POST",
		PathPattern:        "/v1/buckets/{bucketID}/outputs",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PostV1BucketsBucketIDOutputsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostV1BucketsBucketIDOutputsCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PostV1BucketsBucketIDOutputs: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PutV1BucketsBucketIDOutputsOutputID updates output

  Update output destination or make it public/internal.
*/
func (a *Client) PutV1BucketsBucketIDOutputsOutputID(params *PutV1BucketsBucketIDOutputsOutputIDParams) (*PutV1BucketsBucketIDOutputsOutputIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPutV1BucketsBucketIDOutputsOutputIDParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PutV1BucketsBucketIDOutputsOutputID",
		Method:             "PUT",
		PathPattern:        "/v1/buckets/{bucketID}/outputs/{outputID}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PutV1BucketsBucketIDOutputsOutputIDReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PutV1BucketsBucketIDOutputsOutputIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PutV1BucketsBucketIDOutputsOutputID: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
