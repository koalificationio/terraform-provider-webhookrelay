// Code generated by go-swagger; DO NOT EDIT.

package functions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/koalificationio/go-webhookrelay/pkg/openapi/models"
)

// GetV1FunctionsFunctionIDReader is a Reader for the GetV1FunctionsFunctionID structure.
type GetV1FunctionsFunctionIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetV1FunctionsFunctionIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetV1FunctionsFunctionIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetV1FunctionsFunctionIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetV1FunctionsFunctionIDOK creates a GetV1FunctionsFunctionIDOK with default headers values
func NewGetV1FunctionsFunctionIDOK() *GetV1FunctionsFunctionIDOK {
	return &GetV1FunctionsFunctionIDOK{}
}

/*GetV1FunctionsFunctionIDOK handles this case with default header values.

Successful Response
*/
type GetV1FunctionsFunctionIDOK struct {
	Payload *models.Function
}

func (o *GetV1FunctionsFunctionIDOK) Error() string {
	return fmt.Sprintf("[GET /v1/functions/{functionID}][%d] getV1FunctionsFunctionIdOK  %+v", 200, o.Payload)
}

func (o *GetV1FunctionsFunctionIDOK) GetPayload() *models.Function {
	return o.Payload
}

func (o *GetV1FunctionsFunctionIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Function)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1FunctionsFunctionIDNotFound creates a GetV1FunctionsFunctionIDNotFound with default headers values
func NewGetV1FunctionsFunctionIDNotFound() *GetV1FunctionsFunctionIDNotFound {
	return &GetV1FunctionsFunctionIDNotFound{}
}

/*GetV1FunctionsFunctionIDNotFound handles this case with default header values.

Function not found
*/
type GetV1FunctionsFunctionIDNotFound struct {
}

func (o *GetV1FunctionsFunctionIDNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/functions/{functionID}][%d] getV1FunctionsFunctionIdNotFound ", 404)
}

func (o *GetV1FunctionsFunctionIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
