// Code generated by go-swagger; DO NOT EDIT.

package functions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeleteV1FunctionsFunctionIDReader is a Reader for the DeleteV1FunctionsFunctionID structure.
type DeleteV1FunctionsFunctionIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteV1FunctionsFunctionIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteV1FunctionsFunctionIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewDeleteV1FunctionsFunctionIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteV1FunctionsFunctionIDOK creates a DeleteV1FunctionsFunctionIDOK with default headers values
func NewDeleteV1FunctionsFunctionIDOK() *DeleteV1FunctionsFunctionIDOK {
	return &DeleteV1FunctionsFunctionIDOK{}
}

/*DeleteV1FunctionsFunctionIDOK handles this case with default header values.

Successful Response
*/
type DeleteV1FunctionsFunctionIDOK struct {
}

func (o *DeleteV1FunctionsFunctionIDOK) Error() string {
	return fmt.Sprintf("[DELETE /v1/functions/{functionID}][%d] deleteV1FunctionsFunctionIdOK ", 200)
}

func (o *DeleteV1FunctionsFunctionIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteV1FunctionsFunctionIDNotFound creates a DeleteV1FunctionsFunctionIDNotFound with default headers values
func NewDeleteV1FunctionsFunctionIDNotFound() *DeleteV1FunctionsFunctionIDNotFound {
	return &DeleteV1FunctionsFunctionIDNotFound{}
}

/*DeleteV1FunctionsFunctionIDNotFound handles this case with default header values.

Function not found
*/
type DeleteV1FunctionsFunctionIDNotFound struct {
}

func (o *DeleteV1FunctionsFunctionIDNotFound) Error() string {
	return fmt.Sprintf("[DELETE /v1/functions/{functionID}][%d] deleteV1FunctionsFunctionIdNotFound ", 404)
}

func (o *DeleteV1FunctionsFunctionIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
