// Code generated by go-swagger; DO NOT EDIT.

package domains

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/koalificationio/go-webhookrelay/pkg/openapi/models"
)

// PostV1DomainsReader is a Reader for the PostV1Domains structure.
type PostV1DomainsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostV1DomainsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostV1DomainsCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostV1DomainsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 412:
		result := NewPostV1DomainsPreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 451:
		result := NewPostV1DomainsWrongExchangeServer()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostV1DomainsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostV1DomainsCreated creates a PostV1DomainsCreated with default headers values
func NewPostV1DomainsCreated() *PostV1DomainsCreated {
	return &PostV1DomainsCreated{}
}

/*PostV1DomainsCreated handles this case with default header values.

PostV1DomainsCreated post v1 domains created
*/
type PostV1DomainsCreated struct {
	Payload *models.Response
}

func (o *PostV1DomainsCreated) Error() string {
	return fmt.Sprintf("[POST /v1/domains][%d] postV1DomainsCreated  %+v", 201, o.Payload)
}

func (o *PostV1DomainsCreated) GetPayload() *models.Response {
	return o.Payload
}

func (o *PostV1DomainsCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostV1DomainsBadRequest creates a PostV1DomainsBadRequest with default headers values
func NewPostV1DomainsBadRequest() *PostV1DomainsBadRequest {
	return &PostV1DomainsBadRequest{}
}

/*PostV1DomainsBadRequest handles this case with default header values.

Invalid request
*/
type PostV1DomainsBadRequest struct {
}

func (o *PostV1DomainsBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/domains][%d] postV1DomainsBadRequest ", 400)
}

func (o *PostV1DomainsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostV1DomainsPreconditionFailed creates a PostV1DomainsPreconditionFailed with default headers values
func NewPostV1DomainsPreconditionFailed() *PostV1DomainsPreconditionFailed {
	return &PostV1DomainsPreconditionFailed{}
}

/*PostV1DomainsPreconditionFailed handles this case with default header values.

Domain already taken
*/
type PostV1DomainsPreconditionFailed struct {
}

func (o *PostV1DomainsPreconditionFailed) Error() string {
	return fmt.Sprintf("[POST /v1/domains][%d] postV1DomainsPreconditionFailed ", 412)
}

func (o *PostV1DomainsPreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostV1DomainsWrongExchangeServer creates a PostV1DomainsWrongExchangeServer with default headers values
func NewPostV1DomainsWrongExchangeServer() *PostV1DomainsWrongExchangeServer {
	return &PostV1DomainsWrongExchangeServer{}
}

/*PostV1DomainsWrongExchangeServer handles this case with default header values.

Your subscription doesn't include domain reservations
*/
type PostV1DomainsWrongExchangeServer struct {
}

func (o *PostV1DomainsWrongExchangeServer) Error() string {
	return fmt.Sprintf("[POST /v1/domains][%d] postV1DomainsWrongExchangeServer ", 451)
}

func (o *PostV1DomainsWrongExchangeServer) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostV1DomainsInternalServerError creates a PostV1DomainsInternalServerError with default headers values
func NewPostV1DomainsInternalServerError() *PostV1DomainsInternalServerError {
	return &PostV1DomainsInternalServerError{}
}

/*PostV1DomainsInternalServerError handles this case with default header values.

Internal server error
*/
type PostV1DomainsInternalServerError struct {
}

func (o *PostV1DomainsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/domains][%d] postV1DomainsInternalServerError ", 500)
}

func (o *PostV1DomainsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
