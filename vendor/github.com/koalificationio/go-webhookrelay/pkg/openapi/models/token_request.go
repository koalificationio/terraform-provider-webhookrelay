// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// TokenRequest Token Request
// swagger:model TokenRequest
type TokenRequest struct {

	// Can be either 'enabled' or 'disabled'. Tokens with disabled API access can only be used to open tunnels or forward webhooks
	APIAccess string `json:"api_access,omitempty"`

	// description
	Description string `json:"description,omitempty"`

	// scopes
	Scopes *TokenScopes `json:"scopes,omitempty"`
}

// Validate validates this token request
func (m *TokenRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateScopes(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TokenRequest) validateScopes(formats strfmt.Registry) error {

	if swag.IsZero(m.Scopes) { // not required
		return nil
	}

	if m.Scopes != nil {
		if err := m.Scopes.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("scopes")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *TokenRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TokenRequest) UnmarshalBinary(b []byte) error {
	var res TokenRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
